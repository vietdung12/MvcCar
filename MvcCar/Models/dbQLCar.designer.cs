#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MvcCar.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QLCAR")]
	public partial class dbQLCarDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertADMIN(ADMIN instance);
    partial void UpdateADMIN(ADMIN instance);
    partial void DeleteADMIN(ADMIN instance);
    partial void InsertBRANCH(BRANCH instance);
    partial void UpdateBRANCH(BRANCH instance);
    partial void DeleteBRANCH(BRANCH instance);
    partial void InsertCAR(CAR instance);
    partial void UpdateCAR(CAR instance);
    partial void DeleteCAR(CAR instance);
    partial void InsertCARMANUFACTURER(CARMANUFACTURER instance);
    partial void UpdateCARMANUFACTURER(CARMANUFACTURER instance);
    partial void DeleteCARMANUFACTURER(CARMANUFACTURER instance);
    partial void InsertCUSTOMMER(CUSTOMMER instance);
    partial void UpdateCUSTOMMER(CUSTOMMER instance);
    partial void DeleteCUSTOMMER(CUSTOMMER instance);
    partial void InsertORDERCAR(ORDERCAR instance);
    partial void UpdateORDERCAR(ORDERCAR instance);
    partial void DeleteORDERCAR(ORDERCAR instance);
    partial void InsertORDERDETAIL(ORDERDETAIL instance);
    partial void UpdateORDERDETAIL(ORDERDETAIL instance);
    partial void DeleteORDERDETAIL(ORDERDETAIL instance);
    partial void InsertTYPECAR(TYPECAR instance);
    partial void UpdateTYPECAR(TYPECAR instance);
    partial void DeleteTYPECAR(TYPECAR instance);
    partial void InsertTYPECUSTOMMER(TYPECUSTOMMER instance);
    partial void UpdateTYPECUSTOMMER(TYPECUSTOMMER instance);
    partial void DeleteTYPECUSTOMMER(TYPECUSTOMMER instance);
    #endregion
		
		public dbQLCarDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["QLCARConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public dbQLCarDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbQLCarDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbQLCarDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbQLCarDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ADMIN> ADMINs
		{
			get
			{
				return this.GetTable<ADMIN>();
			}
		}
		
		public System.Data.Linq.Table<BRANCH> BRANCHes
		{
			get
			{
				return this.GetTable<BRANCH>();
			}
		}
		
		public System.Data.Linq.Table<CAR> CARs
		{
			get
			{
				return this.GetTable<CAR>();
			}
		}
		
		public System.Data.Linq.Table<CARMANUFACTURER> CARMANUFACTURERs
		{
			get
			{
				return this.GetTable<CARMANUFACTURER>();
			}
		}
		
		public System.Data.Linq.Table<CUSTOMMER> CUSTOMMERs
		{
			get
			{
				return this.GetTable<CUSTOMMER>();
			}
		}
		
		public System.Data.Linq.Table<ORDERCAR> ORDERCARs
		{
			get
			{
				return this.GetTable<ORDERCAR>();
			}
		}
		
		public System.Data.Linq.Table<ORDERDETAIL> ORDERDETAILs
		{
			get
			{
				return this.GetTable<ORDERDETAIL>();
			}
		}
		
		public System.Data.Linq.Table<TYPECAR> TYPECARs
		{
			get
			{
				return this.GetTable<TYPECAR>();
			}
		}
		
		public System.Data.Linq.Table<TYPECUSTOMMER> TYPECUSTOMMERs
		{
			get
			{
				return this.GetTable<TYPECUSTOMMER>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ADMIN")]
	public partial class ADMIN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _AdUser;
		
		private string _AdPass;
		
		private string _AdName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAdUserChanging(string value);
    partial void OnAdUserChanged();
    partial void OnAdPassChanging(string value);
    partial void OnAdPassChanged();
    partial void OnAdNameChanging(string value);
    partial void OnAdNameChanged();
    #endregion
		
		public ADMIN()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdUser", DbType="NVarChar(30) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string AdUser
		{
			get
			{
				return this._AdUser;
			}
			set
			{
				if ((this._AdUser != value))
				{
					this.OnAdUserChanging(value);
					this.SendPropertyChanging();
					this._AdUser = value;
					this.SendPropertyChanged("AdUser");
					this.OnAdUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdPass", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string AdPass
		{
			get
			{
				return this._AdPass;
			}
			set
			{
				if ((this._AdPass != value))
				{
					this.OnAdPassChanging(value);
					this.SendPropertyChanging();
					this._AdPass = value;
					this.SendPropertyChanged("AdPass");
					this.OnAdPassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdName", DbType="NVarChar(50)")]
		public string AdName
		{
			get
			{
				return this._AdName;
			}
			set
			{
				if ((this._AdName != value))
				{
					this.OnAdNameChanging(value);
					this.SendPropertyChanging();
					this._AdName = value;
					this.SendPropertyChanged("AdName");
					this.OnAdNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BRANCH")]
	public partial class BRANCH : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BraID;
		
		private string _BraLocal;
		
		private string _BraAdress;
		
		private string _BraTelephone;
		
		private EntitySet<CAR> _CARs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBraIDChanging(int value);
    partial void OnBraIDChanged();
    partial void OnBraLocalChanging(string value);
    partial void OnBraLocalChanged();
    partial void OnBraAdressChanging(string value);
    partial void OnBraAdressChanged();
    partial void OnBraTelephoneChanging(string value);
    partial void OnBraTelephoneChanged();
    #endregion
		
		public BRANCH()
		{
			this._CARs = new EntitySet<CAR>(new Action<CAR>(this.attach_CARs), new Action<CAR>(this.detach_CARs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BraID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int BraID
		{
			get
			{
				return this._BraID;
			}
			set
			{
				if ((this._BraID != value))
				{
					this.OnBraIDChanging(value);
					this.SendPropertyChanging();
					this._BraID = value;
					this.SendPropertyChanged("BraID");
					this.OnBraIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BraLocal", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string BraLocal
		{
			get
			{
				return this._BraLocal;
			}
			set
			{
				if ((this._BraLocal != value))
				{
					this.OnBraLocalChanging(value);
					this.SendPropertyChanging();
					this._BraLocal = value;
					this.SendPropertyChanged("BraLocal");
					this.OnBraLocalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BraAdress", DbType="NVarChar(200)")]
		public string BraAdress
		{
			get
			{
				return this._BraAdress;
			}
			set
			{
				if ((this._BraAdress != value))
				{
					this.OnBraAdressChanging(value);
					this.SendPropertyChanging();
					this._BraAdress = value;
					this.SendPropertyChanged("BraAdress");
					this.OnBraAdressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BraTelephone", DbType="VarChar(50)")]
		public string BraTelephone
		{
			get
			{
				return this._BraTelephone;
			}
			set
			{
				if ((this._BraTelephone != value))
				{
					this.OnBraTelephoneChanging(value);
					this.SendPropertyChanging();
					this._BraTelephone = value;
					this.SendPropertyChanged("BraTelephone");
					this.OnBraTelephoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BRANCH_CAR", Storage="_CARs", ThisKey="BraID", OtherKey="BraID")]
		public EntitySet<CAR> CARs
		{
			get
			{
				return this._CARs;
			}
			set
			{
				this._CARs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CARs(CAR entity)
		{
			this.SendPropertyChanging();
			entity.BRANCH = this;
		}
		
		private void detach_CARs(CAR entity)
		{
			this.SendPropertyChanging();
			entity.BRANCH = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CAR")]
	public partial class CAR : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CarID;
		
		private string _CarName;
		
		private System.Nullable<decimal> _Price;
		
		private string _Introduce;
		
		private string _Image;
		
		private System.Nullable<System.DateTime> _UpdateDay;
		
		private System.Nullable<int> _AvailableQuantity;
		
		private System.Nullable<int> _TypeCarID;
		
		private System.Nullable<int> _BraID;
		
		private System.Nullable<int> _CarManuID;
		
		private EntitySet<ORDERDETAIL> _ORDERDETAILs;
		
		private EntityRef<BRANCH> _BRANCH;
		
		private EntityRef<CARMANUFACTURER> _CARMANUFACTURER;
		
		private EntityRef<TYPECAR> _TYPECAR;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCarIDChanging(int value);
    partial void OnCarIDChanged();
    partial void OnCarNameChanging(string value);
    partial void OnCarNameChanged();
    partial void OnPriceChanging(System.Nullable<decimal> value);
    partial void OnPriceChanged();
    partial void OnIntroduceChanging(string value);
    partial void OnIntroduceChanged();
    partial void OnImageChanging(string value);
    partial void OnImageChanged();
    partial void OnUpdateDayChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateDayChanged();
    partial void OnAvailableQuantityChanging(System.Nullable<int> value);
    partial void OnAvailableQuantityChanged();
    partial void OnTypeCarIDChanging(System.Nullable<int> value);
    partial void OnTypeCarIDChanged();
    partial void OnBraIDChanging(System.Nullable<int> value);
    partial void OnBraIDChanged();
    partial void OnCarManuIDChanging(System.Nullable<int> value);
    partial void OnCarManuIDChanged();
    #endregion
		
		public CAR()
		{
			this._ORDERDETAILs = new EntitySet<ORDERDETAIL>(new Action<ORDERDETAIL>(this.attach_ORDERDETAILs), new Action<ORDERDETAIL>(this.detach_ORDERDETAILs));
			this._BRANCH = default(EntityRef<BRANCH>);
			this._CARMANUFACTURER = default(EntityRef<CARMANUFACTURER>);
			this._TYPECAR = default(EntityRef<TYPECAR>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CarID
		{
			get
			{
				return this._CarID;
			}
			set
			{
				if ((this._CarID != value))
				{
					this.OnCarIDChanging(value);
					this.SendPropertyChanging();
					this._CarID = value;
					this.SendPropertyChanged("CarID");
					this.OnCarIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string CarName
		{
			get
			{
				return this._CarName;
			}
			set
			{
				if ((this._CarName != value))
				{
					this.OnCarNameChanging(value);
					this.SendPropertyChanging();
					this._CarName = value;
					this.SendPropertyChanged("CarName");
					this.OnCarNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Introduce", DbType="NVarChar(MAX)")]
		public string Introduce
		{
			get
			{
				return this._Introduce;
			}
			set
			{
				if ((this._Introduce != value))
				{
					this.OnIntroduceChanging(value);
					this.SendPropertyChanging();
					this._Introduce = value;
					this.SendPropertyChanged("Introduce");
					this.OnIntroduceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image", DbType="VarChar(50)")]
		public string Image
		{
			get
			{
				return this._Image;
			}
			set
			{
				if ((this._Image != value))
				{
					this.OnImageChanging(value);
					this.SendPropertyChanging();
					this._Image = value;
					this.SendPropertyChanged("Image");
					this.OnImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDay", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateDay
		{
			get
			{
				return this._UpdateDay;
			}
			set
			{
				if ((this._UpdateDay != value))
				{
					this.OnUpdateDayChanging(value);
					this.SendPropertyChanging();
					this._UpdateDay = value;
					this.SendPropertyChanged("UpdateDay");
					this.OnUpdateDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AvailableQuantity", DbType="Int")]
		public System.Nullable<int> AvailableQuantity
		{
			get
			{
				return this._AvailableQuantity;
			}
			set
			{
				if ((this._AvailableQuantity != value))
				{
					this.OnAvailableQuantityChanging(value);
					this.SendPropertyChanging();
					this._AvailableQuantity = value;
					this.SendPropertyChanged("AvailableQuantity");
					this.OnAvailableQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeCarID", DbType="Int")]
		public System.Nullable<int> TypeCarID
		{
			get
			{
				return this._TypeCarID;
			}
			set
			{
				if ((this._TypeCarID != value))
				{
					if (this._TYPECAR.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTypeCarIDChanging(value);
					this.SendPropertyChanging();
					this._TypeCarID = value;
					this.SendPropertyChanged("TypeCarID");
					this.OnTypeCarIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BraID", DbType="Int")]
		public System.Nullable<int> BraID
		{
			get
			{
				return this._BraID;
			}
			set
			{
				if ((this._BraID != value))
				{
					if (this._BRANCH.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBraIDChanging(value);
					this.SendPropertyChanging();
					this._BraID = value;
					this.SendPropertyChanged("BraID");
					this.OnBraIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarManuID", DbType="Int")]
		public System.Nullable<int> CarManuID
		{
			get
			{
				return this._CarManuID;
			}
			set
			{
				if ((this._CarManuID != value))
				{
					if (this._CARMANUFACTURER.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCarManuIDChanging(value);
					this.SendPropertyChanging();
					this._CarManuID = value;
					this.SendPropertyChanged("CarManuID");
					this.OnCarManuIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CAR_ORDERDETAIL", Storage="_ORDERDETAILs", ThisKey="CarID", OtherKey="CarID")]
		public EntitySet<ORDERDETAIL> ORDERDETAILs
		{
			get
			{
				return this._ORDERDETAILs;
			}
			set
			{
				this._ORDERDETAILs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BRANCH_CAR", Storage="_BRANCH", ThisKey="BraID", OtherKey="BraID", IsForeignKey=true)]
		public BRANCH BRANCH
		{
			get
			{
				return this._BRANCH.Entity;
			}
			set
			{
				BRANCH previousValue = this._BRANCH.Entity;
				if (((previousValue != value) 
							|| (this._BRANCH.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BRANCH.Entity = null;
						previousValue.CARs.Remove(this);
					}
					this._BRANCH.Entity = value;
					if ((value != null))
					{
						value.CARs.Add(this);
						this._BraID = value.BraID;
					}
					else
					{
						this._BraID = default(Nullable<int>);
					}
					this.SendPropertyChanged("BRANCH");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CARMANUFACTURER_CAR", Storage="_CARMANUFACTURER", ThisKey="CarManuID", OtherKey="CarManuID", IsForeignKey=true)]
		public CARMANUFACTURER CARMANUFACTURER
		{
			get
			{
				return this._CARMANUFACTURER.Entity;
			}
			set
			{
				CARMANUFACTURER previousValue = this._CARMANUFACTURER.Entity;
				if (((previousValue != value) 
							|| (this._CARMANUFACTURER.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CARMANUFACTURER.Entity = null;
						previousValue.CARs.Remove(this);
					}
					this._CARMANUFACTURER.Entity = value;
					if ((value != null))
					{
						value.CARs.Add(this);
						this._CarManuID = value.CarManuID;
					}
					else
					{
						this._CarManuID = default(Nullable<int>);
					}
					this.SendPropertyChanged("CARMANUFACTURER");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TYPECAR_CAR", Storage="_TYPECAR", ThisKey="TypeCarID", OtherKey="TypeCarID", IsForeignKey=true)]
		public TYPECAR TYPECAR
		{
			get
			{
				return this._TYPECAR.Entity;
			}
			set
			{
				TYPECAR previousValue = this._TYPECAR.Entity;
				if (((previousValue != value) 
							|| (this._TYPECAR.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TYPECAR.Entity = null;
						previousValue.CARs.Remove(this);
					}
					this._TYPECAR.Entity = value;
					if ((value != null))
					{
						value.CARs.Add(this);
						this._TypeCarID = value.TypeCarID;
					}
					else
					{
						this._TypeCarID = default(Nullable<int>);
					}
					this.SendPropertyChanged("TYPECAR");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ORDERDETAILs(ORDERDETAIL entity)
		{
			this.SendPropertyChanging();
			entity.CAR = this;
		}
		
		private void detach_ORDERDETAILs(ORDERDETAIL entity)
		{
			this.SendPropertyChanging();
			entity.CAR = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CARMANUFACTURER")]
	public partial class CARMANUFACTURER : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CarManuID;
		
		private string _CarManuName;
		
		private EntitySet<CAR> _CARs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCarManuIDChanging(int value);
    partial void OnCarManuIDChanged();
    partial void OnCarManuNameChanging(string value);
    partial void OnCarManuNameChanged();
    #endregion
		
		public CARMANUFACTURER()
		{
			this._CARs = new EntitySet<CAR>(new Action<CAR>(this.attach_CARs), new Action<CAR>(this.detach_CARs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarManuID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CarManuID
		{
			get
			{
				return this._CarManuID;
			}
			set
			{
				if ((this._CarManuID != value))
				{
					this.OnCarManuIDChanging(value);
					this.SendPropertyChanging();
					this._CarManuID = value;
					this.SendPropertyChanged("CarManuID");
					this.OnCarManuIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarManuName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CarManuName
		{
			get
			{
				return this._CarManuName;
			}
			set
			{
				if ((this._CarManuName != value))
				{
					this.OnCarManuNameChanging(value);
					this.SendPropertyChanging();
					this._CarManuName = value;
					this.SendPropertyChanged("CarManuName");
					this.OnCarManuNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CARMANUFACTURER_CAR", Storage="_CARs", ThisKey="CarManuID", OtherKey="CarManuID")]
		public EntitySet<CAR> CARs
		{
			get
			{
				return this._CARs;
			}
			set
			{
				this._CARs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CARs(CAR entity)
		{
			this.SendPropertyChanging();
			entity.CARMANUFACTURER = this;
		}
		
		private void detach_CARs(CAR entity)
		{
			this.SendPropertyChanging();
			entity.CARMANUFACTURER = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CUSTOMMER")]
	public partial class CUSTOMMER : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CusID;
		
		private string _CusName;
		
		private string _CusEmail;
		
		private string _CusPass;
		
		private string _CusAdress;
		
		private string _CusTelephone;
		
		private System.Nullable<System.DateTime> _BirthDay;
		
		private System.Nullable<int> _TypeCusID;
		
		private EntitySet<ORDERCAR> _ORDERCARs;
		
		private EntityRef<TYPECUSTOMMER> _TYPECUSTOMMER;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCusIDChanging(int value);
    partial void OnCusIDChanged();
    partial void OnCusNameChanging(string value);
    partial void OnCusNameChanged();
    partial void OnCusEmailChanging(string value);
    partial void OnCusEmailChanged();
    partial void OnCusPassChanging(string value);
    partial void OnCusPassChanged();
    partial void OnCusAdressChanging(string value);
    partial void OnCusAdressChanged();
    partial void OnCusTelephoneChanging(string value);
    partial void OnCusTelephoneChanged();
    partial void OnBirthDayChanging(System.Nullable<System.DateTime> value);
    partial void OnBirthDayChanged();
    partial void OnTypeCusIDChanging(System.Nullable<int> value);
    partial void OnTypeCusIDChanged();
    #endregion
		
		public CUSTOMMER()
		{
			this._ORDERCARs = new EntitySet<ORDERCAR>(new Action<ORDERCAR>(this.attach_ORDERCARs), new Action<ORDERCAR>(this.detach_ORDERCARs));
			this._TYPECUSTOMMER = default(EntityRef<TYPECUSTOMMER>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CusID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CusID
		{
			get
			{
				return this._CusID;
			}
			set
			{
				if ((this._CusID != value))
				{
					this.OnCusIDChanging(value);
					this.SendPropertyChanging();
					this._CusID = value;
					this.SendPropertyChanged("CusID");
					this.OnCusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CusName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CusName
		{
			get
			{
				return this._CusName;
			}
			set
			{
				if ((this._CusName != value))
				{
					this.OnCusNameChanging(value);
					this.SendPropertyChanging();
					this._CusName = value;
					this.SendPropertyChanged("CusName");
					this.OnCusNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CusEmail", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string CusEmail
		{
			get
			{
				return this._CusEmail;
			}
			set
			{
				if ((this._CusEmail != value))
				{
					this.OnCusEmailChanging(value);
					this.SendPropertyChanging();
					this._CusEmail = value;
					this.SendPropertyChanged("CusEmail");
					this.OnCusEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CusPass", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CusPass
		{
			get
			{
				return this._CusPass;
			}
			set
			{
				if ((this._CusPass != value))
				{
					this.OnCusPassChanging(value);
					this.SendPropertyChanging();
					this._CusPass = value;
					this.SendPropertyChanged("CusPass");
					this.OnCusPassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CusAdress", DbType="NVarChar(200)")]
		public string CusAdress
		{
			get
			{
				return this._CusAdress;
			}
			set
			{
				if ((this._CusAdress != value))
				{
					this.OnCusAdressChanging(value);
					this.SendPropertyChanging();
					this._CusAdress = value;
					this.SendPropertyChanged("CusAdress");
					this.OnCusAdressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CusTelephone", DbType="NVarChar(50)")]
		public string CusTelephone
		{
			get
			{
				return this._CusTelephone;
			}
			set
			{
				if ((this._CusTelephone != value))
				{
					this.OnCusTelephoneChanging(value);
					this.SendPropertyChanging();
					this._CusTelephone = value;
					this.SendPropertyChanged("CusTelephone");
					this.OnCusTelephoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BirthDay", DbType="DateTime")]
		public System.Nullable<System.DateTime> BirthDay
		{
			get
			{
				return this._BirthDay;
			}
			set
			{
				if ((this._BirthDay != value))
				{
					this.OnBirthDayChanging(value);
					this.SendPropertyChanging();
					this._BirthDay = value;
					this.SendPropertyChanged("BirthDay");
					this.OnBirthDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeCusID", DbType="Int")]
		public System.Nullable<int> TypeCusID
		{
			get
			{
				return this._TypeCusID;
			}
			set
			{
				if ((this._TypeCusID != value))
				{
					if (this._TYPECUSTOMMER.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTypeCusIDChanging(value);
					this.SendPropertyChanging();
					this._TypeCusID = value;
					this.SendPropertyChanged("TypeCusID");
					this.OnTypeCusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CUSTOMMER_ORDERCAR", Storage="_ORDERCARs", ThisKey="CusID", OtherKey="CusID")]
		public EntitySet<ORDERCAR> ORDERCARs
		{
			get
			{
				return this._ORDERCARs;
			}
			set
			{
				this._ORDERCARs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TYPECUSTOMMER_CUSTOMMER", Storage="_TYPECUSTOMMER", ThisKey="TypeCusID", OtherKey="TypeCusID", IsForeignKey=true)]
		public TYPECUSTOMMER TYPECUSTOMMER
		{
			get
			{
				return this._TYPECUSTOMMER.Entity;
			}
			set
			{
				TYPECUSTOMMER previousValue = this._TYPECUSTOMMER.Entity;
				if (((previousValue != value) 
							|| (this._TYPECUSTOMMER.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TYPECUSTOMMER.Entity = null;
						previousValue.CUSTOMMERs.Remove(this);
					}
					this._TYPECUSTOMMER.Entity = value;
					if ((value != null))
					{
						value.CUSTOMMERs.Add(this);
						this._TypeCusID = value.TypeCusID;
					}
					else
					{
						this._TypeCusID = default(Nullable<int>);
					}
					this.SendPropertyChanged("TYPECUSTOMMER");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ORDERCARs(ORDERCAR entity)
		{
			this.SendPropertyChanging();
			entity.CUSTOMMER = this;
		}
		
		private void detach_ORDERCARs(ORDERCAR entity)
		{
			this.SendPropertyChanging();
			entity.CUSTOMMER = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ORDERCAR")]
	public partial class ORDERCAR : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _OrderID;
		
		private System.Nullable<bool> _Paid;
		
		private System.Nullable<bool> _DeliveryStatus;
		
		private System.Nullable<System.DateTime> _OrderDate;
		
		private System.Nullable<System.DateTime> _DeliveryDate;
		
		private System.Nullable<int> _CusID;
		
		private EntitySet<ORDERDETAIL> _ORDERDETAILs;
		
		private EntityRef<CUSTOMMER> _CUSTOMMER;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrderIDChanging(int value);
    partial void OnOrderIDChanged();
    partial void OnPaidChanging(System.Nullable<bool> value);
    partial void OnPaidChanged();
    partial void OnDeliveryStatusChanging(System.Nullable<bool> value);
    partial void OnDeliveryStatusChanged();
    partial void OnOrderDateChanging(System.Nullable<System.DateTime> value);
    partial void OnOrderDateChanged();
    partial void OnDeliveryDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDeliveryDateChanged();
    partial void OnCusIDChanging(System.Nullable<int> value);
    partial void OnCusIDChanged();
    #endregion
		
		public ORDERCAR()
		{
			this._ORDERDETAILs = new EntitySet<ORDERDETAIL>(new Action<ORDERDETAIL>(this.attach_ORDERDETAILs), new Action<ORDERDETAIL>(this.detach_ORDERDETAILs));
			this._CUSTOMMER = default(EntityRef<CUSTOMMER>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int OrderID
		{
			get
			{
				return this._OrderID;
			}
			set
			{
				if ((this._OrderID != value))
				{
					this.OnOrderIDChanging(value);
					this.SendPropertyChanging();
					this._OrderID = value;
					this.SendPropertyChanged("OrderID");
					this.OnOrderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Paid", DbType="Bit")]
		public System.Nullable<bool> Paid
		{
			get
			{
				return this._Paid;
			}
			set
			{
				if ((this._Paid != value))
				{
					this.OnPaidChanging(value);
					this.SendPropertyChanging();
					this._Paid = value;
					this.SendPropertyChanged("Paid");
					this.OnPaidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryStatus", DbType="Bit")]
		public System.Nullable<bool> DeliveryStatus
		{
			get
			{
				return this._DeliveryStatus;
			}
			set
			{
				if ((this._DeliveryStatus != value))
				{
					this.OnDeliveryStatusChanging(value);
					this.SendPropertyChanging();
					this._DeliveryStatus = value;
					this.SendPropertyChanged("DeliveryStatus");
					this.OnDeliveryStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> OrderDate
		{
			get
			{
				return this._OrderDate;
			}
			set
			{
				if ((this._OrderDate != value))
				{
					this.OnOrderDateChanging(value);
					this.SendPropertyChanging();
					this._OrderDate = value;
					this.SendPropertyChanged("OrderDate");
					this.OnOrderDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DeliveryDate
		{
			get
			{
				return this._DeliveryDate;
			}
			set
			{
				if ((this._DeliveryDate != value))
				{
					this.OnDeliveryDateChanging(value);
					this.SendPropertyChanging();
					this._DeliveryDate = value;
					this.SendPropertyChanged("DeliveryDate");
					this.OnDeliveryDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CusID", DbType="Int")]
		public System.Nullable<int> CusID
		{
			get
			{
				return this._CusID;
			}
			set
			{
				if ((this._CusID != value))
				{
					if (this._CUSTOMMER.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCusIDChanging(value);
					this.SendPropertyChanging();
					this._CusID = value;
					this.SendPropertyChanged("CusID");
					this.OnCusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ORDERCAR_ORDERDETAIL", Storage="_ORDERDETAILs", ThisKey="OrderID", OtherKey="OrderID")]
		public EntitySet<ORDERDETAIL> ORDERDETAILs
		{
			get
			{
				return this._ORDERDETAILs;
			}
			set
			{
				this._ORDERDETAILs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CUSTOMMER_ORDERCAR", Storage="_CUSTOMMER", ThisKey="CusID", OtherKey="CusID", IsForeignKey=true)]
		public CUSTOMMER CUSTOMMER
		{
			get
			{
				return this._CUSTOMMER.Entity;
			}
			set
			{
				CUSTOMMER previousValue = this._CUSTOMMER.Entity;
				if (((previousValue != value) 
							|| (this._CUSTOMMER.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CUSTOMMER.Entity = null;
						previousValue.ORDERCARs.Remove(this);
					}
					this._CUSTOMMER.Entity = value;
					if ((value != null))
					{
						value.ORDERCARs.Add(this);
						this._CusID = value.CusID;
					}
					else
					{
						this._CusID = default(Nullable<int>);
					}
					this.SendPropertyChanged("CUSTOMMER");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ORDERDETAILs(ORDERDETAIL entity)
		{
			this.SendPropertyChanging();
			entity.ORDERCAR = this;
		}
		
		private void detach_ORDERDETAILs(ORDERDETAIL entity)
		{
			this.SendPropertyChanging();
			entity.ORDERCAR = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ORDERDETAILS")]
	public partial class ORDERDETAIL : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _OrderID;
		
		private int _CarID;
		
		private System.Nullable<int> _Quantity;
		
		private System.Nullable<decimal> _UnitPrice;
		
		private System.Nullable<double> _Discout;
		
		private System.Nullable<System.DateTime> _ReturnDate;
		
		private EntityRef<CAR> _CAR;
		
		private EntityRef<ORDERCAR> _ORDERCAR;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrderIDChanging(int value);
    partial void OnOrderIDChanged();
    partial void OnCarIDChanging(int value);
    partial void OnCarIDChanged();
    partial void OnQuantityChanging(System.Nullable<int> value);
    partial void OnQuantityChanged();
    partial void OnUnitPriceChanging(System.Nullable<decimal> value);
    partial void OnUnitPriceChanged();
    partial void OnDiscoutChanging(System.Nullable<double> value);
    partial void OnDiscoutChanged();
    partial void OnReturnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnReturnDateChanged();
    #endregion
		
		public ORDERDETAIL()
		{
			this._CAR = default(EntityRef<CAR>);
			this._ORDERCAR = default(EntityRef<ORDERCAR>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int OrderID
		{
			get
			{
				return this._OrderID;
			}
			set
			{
				if ((this._OrderID != value))
				{
					if (this._ORDERCAR.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrderIDChanging(value);
					this.SendPropertyChanging();
					this._OrderID = value;
					this.SendPropertyChanged("OrderID");
					this.OnOrderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int CarID
		{
			get
			{
				return this._CarID;
			}
			set
			{
				if ((this._CarID != value))
				{
					if (this._CAR.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCarIDChanging(value);
					this.SendPropertyChanging();
					this._CarID = value;
					this.SendPropertyChanged("CarID");
					this.OnCarIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int")]
		public System.Nullable<int> Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitPrice", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> UnitPrice
		{
			get
			{
				return this._UnitPrice;
			}
			set
			{
				if ((this._UnitPrice != value))
				{
					this.OnUnitPriceChanging(value);
					this.SendPropertyChanging();
					this._UnitPrice = value;
					this.SendPropertyChanged("UnitPrice");
					this.OnUnitPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Discout", DbType="Float")]
		public System.Nullable<double> Discout
		{
			get
			{
				return this._Discout;
			}
			set
			{
				if ((this._Discout != value))
				{
					this.OnDiscoutChanging(value);
					this.SendPropertyChanging();
					this._Discout = value;
					this.SendPropertyChanged("Discout");
					this.OnDiscoutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReturnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ReturnDate
		{
			get
			{
				return this._ReturnDate;
			}
			set
			{
				if ((this._ReturnDate != value))
				{
					this.OnReturnDateChanging(value);
					this.SendPropertyChanging();
					this._ReturnDate = value;
					this.SendPropertyChanged("ReturnDate");
					this.OnReturnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CAR_ORDERDETAIL", Storage="_CAR", ThisKey="CarID", OtherKey="CarID", IsForeignKey=true)]
		public CAR CAR
		{
			get
			{
				return this._CAR.Entity;
			}
			set
			{
				CAR previousValue = this._CAR.Entity;
				if (((previousValue != value) 
							|| (this._CAR.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CAR.Entity = null;
						previousValue.ORDERDETAILs.Remove(this);
					}
					this._CAR.Entity = value;
					if ((value != null))
					{
						value.ORDERDETAILs.Add(this);
						this._CarID = value.CarID;
					}
					else
					{
						this._CarID = default(int);
					}
					this.SendPropertyChanged("CAR");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ORDERCAR_ORDERDETAIL", Storage="_ORDERCAR", ThisKey="OrderID", OtherKey="OrderID", IsForeignKey=true)]
		public ORDERCAR ORDERCAR
		{
			get
			{
				return this._ORDERCAR.Entity;
			}
			set
			{
				ORDERCAR previousValue = this._ORDERCAR.Entity;
				if (((previousValue != value) 
							|| (this._ORDERCAR.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ORDERCAR.Entity = null;
						previousValue.ORDERDETAILs.Remove(this);
					}
					this._ORDERCAR.Entity = value;
					if ((value != null))
					{
						value.ORDERDETAILs.Add(this);
						this._OrderID = value.OrderID;
					}
					else
					{
						this._OrderID = default(int);
					}
					this.SendPropertyChanged("ORDERCAR");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TYPECAR")]
	public partial class TYPECAR : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TypeCarID;
		
		private string _TypeCarName;
		
		private EntitySet<CAR> _CARs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTypeCarIDChanging(int value);
    partial void OnTypeCarIDChanged();
    partial void OnTypeCarNameChanging(string value);
    partial void OnTypeCarNameChanged();
    #endregion
		
		public TYPECAR()
		{
			this._CARs = new EntitySet<CAR>(new Action<CAR>(this.attach_CARs), new Action<CAR>(this.detach_CARs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeCarID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TypeCarID
		{
			get
			{
				return this._TypeCarID;
			}
			set
			{
				if ((this._TypeCarID != value))
				{
					this.OnTypeCarIDChanging(value);
					this.SendPropertyChanging();
					this._TypeCarID = value;
					this.SendPropertyChanged("TypeCarID");
					this.OnTypeCarIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeCarName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TypeCarName
		{
			get
			{
				return this._TypeCarName;
			}
			set
			{
				if ((this._TypeCarName != value))
				{
					this.OnTypeCarNameChanging(value);
					this.SendPropertyChanging();
					this._TypeCarName = value;
					this.SendPropertyChanged("TypeCarName");
					this.OnTypeCarNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TYPECAR_CAR", Storage="_CARs", ThisKey="TypeCarID", OtherKey="TypeCarID")]
		public EntitySet<CAR> CARs
		{
			get
			{
				return this._CARs;
			}
			set
			{
				this._CARs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CARs(CAR entity)
		{
			this.SendPropertyChanging();
			entity.TYPECAR = this;
		}
		
		private void detach_CARs(CAR entity)
		{
			this.SendPropertyChanging();
			entity.TYPECAR = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TYPECUSTOMMER")]
	public partial class TYPECUSTOMMER : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TypeCusID;
		
		private string _TypeName;
		
		private System.Nullable<double> _Discout;
		
		private EntitySet<CUSTOMMER> _CUSTOMMERs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTypeCusIDChanging(int value);
    partial void OnTypeCusIDChanged();
    partial void OnTypeNameChanging(string value);
    partial void OnTypeNameChanged();
    partial void OnDiscoutChanging(System.Nullable<double> value);
    partial void OnDiscoutChanged();
    #endregion
		
		public TYPECUSTOMMER()
		{
			this._CUSTOMMERs = new EntitySet<CUSTOMMER>(new Action<CUSTOMMER>(this.attach_CUSTOMMERs), new Action<CUSTOMMER>(this.detach_CUSTOMMERs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeCusID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TypeCusID
		{
			get
			{
				return this._TypeCusID;
			}
			set
			{
				if ((this._TypeCusID != value))
				{
					this.OnTypeCusIDChanging(value);
					this.SendPropertyChanging();
					this._TypeCusID = value;
					this.SendPropertyChanged("TypeCusID");
					this.OnTypeCusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeName", DbType="NVarChar(30)")]
		public string TypeName
		{
			get
			{
				return this._TypeName;
			}
			set
			{
				if ((this._TypeName != value))
				{
					this.OnTypeNameChanging(value);
					this.SendPropertyChanging();
					this._TypeName = value;
					this.SendPropertyChanged("TypeName");
					this.OnTypeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Discout", DbType="Float")]
		public System.Nullable<double> Discout
		{
			get
			{
				return this._Discout;
			}
			set
			{
				if ((this._Discout != value))
				{
					this.OnDiscoutChanging(value);
					this.SendPropertyChanging();
					this._Discout = value;
					this.SendPropertyChanged("Discout");
					this.OnDiscoutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TYPECUSTOMMER_CUSTOMMER", Storage="_CUSTOMMERs", ThisKey="TypeCusID", OtherKey="TypeCusID")]
		public EntitySet<CUSTOMMER> CUSTOMMERs
		{
			get
			{
				return this._CUSTOMMERs;
			}
			set
			{
				this._CUSTOMMERs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CUSTOMMERs(CUSTOMMER entity)
		{
			this.SendPropertyChanging();
			entity.TYPECUSTOMMER = this;
		}
		
		private void detach_CUSTOMMERs(CUSTOMMER entity)
		{
			this.SendPropertyChanging();
			entity.TYPECUSTOMMER = null;
		}
	}
}
#pragma warning restore 1591
